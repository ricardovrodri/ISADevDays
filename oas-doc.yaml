openapi: 3.0.3
info:
  version: 1.0.0
  title: GH Users
  description: GH GQL USers info

paths:
  /api/v1/gitaccounts:
    x-router-controller: UserController
    get:
      description: Returns all gitaccounts
      operationId: getGitaccounts
      responses:
        200:
          description: Gitaccount list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gitaccount'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/gitaccounts/{username}:
    x-router-controller: UserController
    get:
      description: Returns a single gitaccount by its username
      operationId: findByusername
      parameters:
        - required: true
          name: username
          description: username of the gitaccount to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Gitaccount found by username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gitaccount'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    gitaccount:
        type: object
        required:
          - username
          - status
          - bio
          - avatarUrl
          - followers
          - following
          - issues
        properties:
          username:
            type: string
          status:
            type: string
          bio:
            type: string
          avatarUrl:
            type: string
          followers:
            type: array
            items: 
              type: string
          following:
            type: array
            items:
              type: string
          issues:
            type: array
            items:
              type: object
              required:
                - title
                - state
                - createdAt
              properties:
                title:
                  type: string
                state:
                  type: string
                  enum: [OPEN, CLOSED]
                createdAt:
                  type: string
                  format: date-time
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
      additionalProperties: true